name: Image ARM64

on:
  workflow_dispatch:

jobs:
  publish:
    runs-on: ubuntu-latest
    env:
      GOPATH: /home/runner/work/argo-cd/argo-cd
    steps:
      - uses: actions/setup-go@v1
        with:
          go-version: '1.16.4'
      - uses: actions/checkout@master
        with:
          path: src/github.com/mickkael/argo-cd

      # get image tag
      - run: echo ::set-output name=tag::$(cat ./VERSION)-${GITHUB_SHA::8}
        working-directory: ./src/github.com/mickkael/argo-cd
        id: image
      
      # Set QEMU
      - run: |
          docker pull tonistiigi/binfmt:latest
          docker run --rm --privileged tonistiigi/binfmt:latest --install arm64

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        
      # build
      - run: |
          docker buildx build -t quay.io/mickkael/argocd:latest-arm . --build-arg BUILD_ALL_CLIS="false" --platform linux/arm64
# make armimage DOCKER_PUSH=false IMAGE_NAMESPACE=quay.io/mickkael IMAGE_TAG=${{ steps.image.outputs.tag }}
        working-directory: ./src/github.com/mickkael/argo-cd

      # publish
      - run: |
          docker login quay.io --username $USERNAME --password $PASSWORD
          docker push quay.io/mickkael/argocd:${{ steps.image.outputs.tag }}
        env:
          USERNAME: ${{ secrets.QUAYIO_USERNAME }}
          PASSWORD: ${{ secrets.QUAYIO_TOKEN }}
